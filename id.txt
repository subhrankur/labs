SQL CROSS JOIN
Syntax:
SELECT COLUMN_NAME(s) FROM TABLE1,TABLE2;
 
INNER / EQUI JOIN
Syntax:
SELECT COLUMN_NAME(s) FROM TABLE1, TABLE2 WHERE
TABLE1.COLUMN_NAME = TABLE2.COLUMN_NAME AND CONDITION
 
NATURAL JOIN
Syntax:
SELECT COLUMN_NAME(s) FROM TABLE1 NATURAL JOIN TABLE2
 
LEFT OUTER
Syntax:
SELECT COLUMN_NAME(S) FROM TABLE1, TABLE2 WHERE
TABLE1.COLUMN_NAME = TABLE2.COLUMN_NAME(+) AND CONDITION
 
Right OUTER
Syntax:
SELECT COLUMN_NAME(S) FROM TABLE1, TABLE2 WHERE
TABLE1.COLUMN_NAME (+) = TABLE2.COLUMN_NAME AND CONDITION
 
FULL OUTER
Syntax:
SELECT COLUMN_NAME(S) FROM TABLE1 FULL OUTER JOIN TABLE2 ON
TABLE1.COLUMN_NAME = TABLE2.COLUMN_NAME WHERE CONDITION
 
SELF
Syntax:
SELECT COLUMN_NAME(s) FROM TABLE1 A, TABLE1 B
WHERE A.COLUMN_NAME = B.COLUMN_NAME
 
Creating a View:
Syntax:
CREATE VIEW VIEWNAME AS
SELECT COLUMNNAME1, COLUMNNAME2 FROM TABLENAME
WHERE COLUMNNAME=EXPRESSIONLIST;
 
Renaming the Columns of a View
Syntax:
CREATE VIEW VIEWNAME AS SELECT NEWCOLUMNNAME.... FROM TABLENAME WHERE COLUMNNAME =EXPRESSIONLIST;
 
Accessing data from a View:
Syntax:
SELECT COLUMNNAME1, COLUMNNAME2 FROM VIEWNAME WHERE SEARCH CONDITION;
Inserting data to a View:
Syntax:
INSERT IN TO view_name(column1, column2 , column3,..)
VALUES (value1, value2, value3..);
 
Updating a View:
Syntax:
CREATE OR REPLACE VIEW VIEW_NAME AS SELECT column1,coulmn2,.. FROM TABLE_NAME WHERE condition;
 
Deleting a row from a View:
Syntax:
DELETE FROM VIEW_NAME WHERE condition;
 
Drop a view:
Syntax:
DROP VIEW VIEW_NAME;
 
Subquery in Where Clause:
Syntax:
SELECT COLUMN_NAME FROM TABLE_NAME
WHERE COLUMN_NAME COMPARISION_OPERATOR {ALL | ANY | SOME}
(SELECT COLUMN_NAME FROM TABLE_NAME WHERE CONDITION);
 
Creating table from another table:
Syntax:
CREATE TABLE NEW_TABLE (COLUMN_NAMES) AS (SELECT COLUMN_NAMES
FROM OLD_TABLE);
 
Creating table from another table without taking any rows:
Syntax:
CREATE TABLE NEW_TABLE AS SELECT COLUMN_NAMES FROM OLD_TABLE
WHERE 1=2;
 
Subquery with Insert:
Syntax:
INSERT INTO TABLE_NAME (COLUMN1, COLUMN2, COLUMN3....)
SELECT (COLUMN1, COLUMN2, COLUMN3....) FROM TABLE_NAME
WHERE CONDITION
 
Subquery with Update:
Syntax:
UPDATE TABLE_NAME SET COLUMN_NAME = NEW_VALUE
WHERE COLUMN_NAME COMPARISION_OPERATOR (SELECT COLUMN_NAME
FROM TABLE_NAME WHERE CONDITION)
 
Subquery with Delete:
Syntax:
DELETE FROM TABLE_NAME
WHERE COLUMN_NAME EXPRESSION OPERATOR (SELECT COLUMN_NAME
FROM TABLE_NAME WHERE CONDITION);
 
Subquery in From Clause:
Syntax:
SELECT COLUMN_NAMESs FROM (SUBQUERY) WHERE CONDTITION
 
Subquery in select Clause:
Syntax:
SELECT COLUMN NAME, (SUBQUERY) AS NEW COLUMN_NAME FROM
TABLE_NAME WHERE CONDITION;
 
SQL CASE Expression:
Syntax:
CASE
WHEN condition1 THEN result1
WHEN condition2 THEN result2
WHEN conditionN THEN resultN
ELSE result
END
 